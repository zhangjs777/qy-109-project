server.port=8081
server.servlet.context-path=/

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.1.19:3306/two?useSSL=false
spring.datasource.username=root
spring.datasource.password=admin
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

mybatis.type-aliases-package=com.aaa.model
mybatis.mapper-locations=classpath:mapper/*Mapper.xml

# 下面的配置比较常用
# 当项目运行的时候，会自动加载sql文件，去生成数据库表以及表数据(前提是你的数据库必须存在)
# 初始化数据库
# 初始化的表和表中的数据官方的意思是让你分开写，但是后来我发现合在一起写也行
# 官方文档的意思schema只能让你初始化表
spring.datasource.schema=classpath:sql/qy_109110.sql
# data才是初始化数据用的
# spring.datasource.data=

# always：每一次启动项目都会加载sql文件，初始化数据库
# never: 每次启动项目都不会加载sql文件
# embedded：加载内存数据库(非关系型数据库(redis...))
spring.datasource.initialization-mode=never

# todo eureka的一系列配置我就不配了，你们自己配
 #之后就不会再使用真实地址来调用
eureka.client.service-url.defaultZone= http://eureka01:6081/eureka,http://eureka02:6082/eureka,http://eureka03:6083/eureka
# 这么去写其实并不是方便自己，只是让自己队友知道目前自己正在开发什么功能，方便队友操作
eureka.instance.instance-id=sys-interface-8081
# 配置当鼠标悬浮否一个provider的时候，显示的不是localhost，直接显示ip地址
eureka.instance.prefer-ip-address=true
spring.application.name=sys-interface


# 失效eureka的自我保护机制
# 配置自己向eureka去发送心跳的时间(单位是秒)
eureka.instance.lease-renewal-interval-in-seconds=5
# 配置在eureka最后一次接收到心跳往后数几秒进行剔除
eureka.instance.lease-expiration-duration-in-seconds=8







# 通用mapper的配置
# 因为通用mapper并不只是支持MySQL，所以当需要使用自增主键的时候需要指定数据库的类型
mapper.identity=MYSQL
# 配置通用mapper的基础类
mapper.mappers=tk.mybatis.mapper.common.Mapper
# <update> update set user where 1 = 1 <if test='username != null'> and username = #{username} </if> </update>
mapper.not-empty=true
# 因为项目中大量使用到了枚举，但是通用mapper并不认识枚举，所以需要把枚举让他默认自动转换为基础类型处理
mapper.enum-as-simple-type=true

# pagehelper分页插件
pagehelper.helper-dialect=mysql
pagehelper.params=count=countSql
pagehelper.reasonable=false
pagehelper.support-methods-arguments=true


